{
  "version": 3,
  "sources": ["../js/toast.js", "../js/storage.js", "../js/ui.js", "../js/sidebar.js", "../js/state.js", "../js/form.js", "../js/main.inline.import.js", "../public/templates.html"],
  "sourcesContent": ["export function showToast(message, type = 'success') {\n    const toast = document.createElement('div');\n    toast.textContent = message;\n\n    toast.className = `fixed bottom-8 left-1/2 transform -translate-x-1/2 px-4 py-2 rounded shadow-lg z-50 text-white text-sm animate-fadeIn ${type === 'error' ? 'bg-red-600' : 'bg-green-600'\n        }`;\n\n    document.body.appendChild(toast);\n\n    // Trigger fade out after a delay\n    setTimeout(() => {\n        toast.classList.add('animate-fadeOut');\n    }, 2500);\n\n    // Remove toast after animation\n    setTimeout(() => {\n        toast.remove();\n    }, 3000);\n}\n", "\nimport { showToast } from './toast.js';\n\nexport function getStoredData() {\n    return JSON.parse(localStorage.getItem('interactions')) || [];\n}\n\nexport function setStoredData(data) {\n    localStorage.setItem('interactions', JSON.stringify(data));\n}\n\nexport function getCurrentDate() {\n    const date = new Date();\n    return `${String(date.getMonth() + 1).padStart(2, '0')}_${String(date.getDate()).padStart(2, '0')}_${date.getFullYear()}`;\n}\n\nexport function importDataFromFile(inputElementId = 'import-json') {\n    const input = document.getElementById(inputElementId);\n    if (!input) return;\n\n    input.addEventListener('change', (e) => {\n        const file = e.target.files[0];\n        if (!file) return;\n        const reader = new FileReader();\n        reader.onload = (event) => {\n            try {\n                const imported = JSON.parse(event.target.result);\n                const newData = imported.data || imported; // extract data array\n                if (!Array.isArray(newData)) {\n                    showToast('Invalid backup format.');\n                    return;\n                }\n\n                const currentData = getStoredData();\n                const merged = mergeInteractionData(currentData, newData);\n\n                setStoredData(merged);\n                showToast('Data imported successfully!');\n                setTimeout(() => location.reload(), 1500);\n\n            } catch (err) {\n                showToast('Failed to parse backup file.');\n            }\n        };\n        reader.readAsText(file);\n    });\n}\n\nfunction mergeInteractionData(current, incoming) {\n    const map = new Map();\n    current.forEach(entry => map.set(entry.date, entry));\n\n    incoming.forEach(entry => {\n        if (map.has(entry.date)) {\n            const existing = map.get(entry.date);\n            const ids = new Set(existing.interactions.map(i => i.id));\n            const unique = entry.interactions.filter(i => !ids.has(i.id));\n            existing.interactions.push(...unique);\n        } else {\n            map.set(entry.date, entry);\n        }\n    });\n\n    return Array.from(map.values());\n}\n\n\nexport function getSuggestions() {\n  return JSON.parse(localStorage.getItem('suggestions') || '{\"reason-for-calling\":[],\"findings\":[],\"resolution\":[]}');\n}\n\nexport function saveSuggestions(suggestions) {\n  localStorage.setItem('suggestions', JSON.stringify(suggestions));\n}\n", "import { getStoredData, setStoredData, getCurrentDate } from './storage.js';\nimport { prefillForm } from './form.js';\nimport { showToast } from './toast.js';\n\n\n\n\nexport function displayInteractions(targetDate = getCurrentDate()) {\n    const cardList = document.getElementById('card-list');\n    const storedData = getStoredData();\n    const entry = storedData.find(item => item.date === targetDate);\n\n    if (!entry) {\n        cardList.innerHTML = '<p class=\"text-gray-500 text-center\">No interactions found for this date.</p>';\n        return;\n    }\n\n    const template = document.getElementById('interaction-card');\n    cardList.innerHTML = '';\n\n    entry.interactions\n        .sort((a, b) => new Date(b.datetime) - new Date(a.datetime))\n        .forEach(interaction => {\n            const clone = template.content.cloneNode(true);\n            const card = clone.querySelector('.card');\n            card.dataset.id = interaction.id;\n\n            if (interaction.completed) {\n                card.classList.add('bg-green-100');\n                card.querySelector('.done-button').classList.add('text-green-600');\n                card.querySelectorAll('button').forEach(btn => {\n                    btn.classList.remove('hover:bg-blue-600', 'hover:bg-green-600', 'hover:bg-red-600');\n                    btn.classList.add('opacity-50', 'cursor-default');\n                });\n                card.classList.add('completed-card');\n            }\n\n            // Populate content\n            clone.querySelector('.reason').textContent = interaction.reason || '';\n            clone.querySelector('.datetime').textContent = `Date: ${new Date(interaction.datetime).toLocaleString()}`;\n            clone.querySelector('.calling-number').textContent = interaction.cn ? `Calling Number: ${interaction.cn}` : '';\n            clone.querySelector('.incident-number').textContent = interaction.in ? `Incident Number: ${interaction.in}` : '';\n            clone.querySelector('.name').textContent = interaction.name ? `Name: ${interaction.name}` : '';\n            clone.querySelector('.findings').textContent = interaction.findings ? `Findings: ${interaction.findings}` : '';\n            clone.querySelector('.resolution').textContent = interaction.resolution ? `Resolution: ${interaction.resolution}` : '';\n\n            // Action buttons with the # incident copy button\n            const actionContainer = clone.querySelector('.button-container');\n            actionContainer.innerHTML = `\n              <button class=\"bg-gray-300 hover:bg-gray-400 text-gray-800 px-2 py-0.5 rounded text-sm copy-incident\" title=\"Copy incident number\">#</button>\n              <button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mx-2 copy-btn\">Copy</button>\n              <button class=\"bg-yellow-500 hover:bg-yellow-600 text-white font-bold py-2 px-4 rounded mx-2 clone-btn\" title=\"Duplicate this card\">Clone</button>\n              <button class=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded mx-2 update-btn\">Update</button>\n              <button class=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded mx-2 delete-btn\">Delete</button>\n            `;\n\n\n            // Event listeners\n            card.querySelector('.done-button').addEventListener('click', () => toggleComplete(interaction.id));\n            actionContainer.querySelector('.copy-incident').addEventListener('click', () => {\n                navigator.clipboard.writeText(interaction.in || '')\n                    .then(\n                        () => showToast('Incident Number copied'),\n                        () => showToast('Failed to copy Incident Number')\n                    );\n            });\n            actionContainer.querySelector('.copy-btn').addEventListener('click', () => copyToClipboard(interaction.id));\n            actionContainer.querySelector('.update-btn').addEventListener('click', () => {\n                prefillForm(interaction, () => displayInteractions(targetDate));\n\n                // \u2705 Scroll to form\n                const form = document.getElementById('interaction-form');\n                if (form) {\n                    form.scrollIntoView({ behavior: 'smooth', block: 'start' });\n\n                    // \u2705 Highlight form\n                    form.classList.add('ring', 'ring-yellow-400', 'ring-offset-2');\n\n                    setTimeout(() => {\n                        form.classList.remove('ring', 'ring-yellow-400', 'ring-offset-2');\n                    }, 1500);\n                }\n            });\n\n\n            actionContainer.querySelector('.delete-btn').addEventListener('click', () => deleteInteraction(interaction.id));\n            actionContainer.querySelector('.clone-btn').addEventListener('click', () => {\n                const stored = getStoredData();\n                const entryIndex = stored.findIndex(item => item.date === targetDate);\n\n                if (entryIndex !== -1) {\n                    const original = interaction;\n                    const newId = `${Date.now()}`;\n                    const newInteraction = {\n                        ...original,\n                        id: newId,\n                        datetime: new Date().toISOString(),\n                        completed: false,\n                        cn: '',\n                        in: '',\n                        name: '',\n                        reason: original.reason ? `${original.reason} (cloned)` : '(cloned)',\n                    };\n\n                    stored[entryIndex].interactions.unshift(newInteraction);\n                    localStorage.setItem('interactions', JSON.stringify(stored));\n\n                    // Refresh UI\n                    displayInteractions(targetDate);\n\n                    // After render: prefill the form to update it\n                    setTimeout(() => {\n                        const newCard = document.querySelector(`[data-id=\"${newId}\"]`);\n                        if (newCard) {\n                            newCard.scrollIntoView({ behavior: 'smooth', block: 'center' });\n                            newCard.classList.add('ring', 'ring-yellow-400', 'ring-offset-2');\n\n                            setTimeout(() => {\n                                newCard.classList.remove('ring', 'ring-yellow-400', 'ring-offset-2');\n                            }, 1500);\n                        }\n\n                        // Prefill the form for immediate editing\n                        prefillForm(newInteraction);\n                    }, 100);\n                }\n            });\n\n\n            cardList.appendChild(clone);\n        });\n}\n\n\nfunction copyInteraction(id) {\n    const storedData = getStoredData();\n    const allInteractions = storedData.flatMap(item => item.interactions);\n    const i = allInteractions.find(i => i.id === id);\n    if (!i) return '';\n\n    return [\n        i.cn && `Calling Number: ${i.cn}`,\n        i.in && `Incident Number: ${i.in}`,\n        i.name && `Name: ${i.name}`,\n        i.reason && `Reason for Calling: ${i.reason}`,\n        i.findings && `Findings: ${i.findings}`,\n        i.resolution && `Resolution: ${i.resolution}`\n    ].filter(Boolean).join('\\n');\n}\n\nfunction copyToClipboard(id) {\n    const text = copyInteraction(id);\n    navigator.clipboard.writeText(text).then(\n        () => showToast('Copied to clipboard'),\n        () => showToast('Copy failed')\n    );\n}\n\nfunction toggleComplete(id) {\n    const storedData = getStoredData();\n    const currentDate = getCurrentDate();\n    const entry = storedData.find(item => item.date === currentDate);\n    if (entry) {\n        const interaction = entry.interactions.find(i => i.id === id);\n        if (interaction) interaction.completed = !interaction.completed;\n        setStoredData(storedData);\n        displayInteractions(currentDate);\n    }\n}\n\nfunction deleteInteraction(id) {\n    const storedData = getStoredData();\n    const currentDate = getCurrentDate();\n    const entry = storedData.find(item => item.date === currentDate);\n    if (entry) {\n        entry.interactions = entry.interactions.filter(i => i.id !== id);\n        setStoredData(storedData);\n        displayInteractions(currentDate);\n    }\n}\n\nexport function createExportPopup() {\n    const popup = document.createElement('div');\n    popup.className = 'absolute left-20 bottom-10 bg-white border rounded shadow-lg z-50 w-48 text-sm';\n\n    const options = [\n        { label: 'Today (Text)', value: 'today' },\n        { label: 'All (Text)', value: 'allText' },\n        { label: 'All Data (JSON)', value: 'allJSON' }\n    ];\n\n    options.forEach(opt => {\n        const btn = document.createElement('button');\n        btn.textContent = opt.label;\n        btn.className = 'w-full text-left px-4 py-2 hover:bg-gray-100';\n        btn.onclick = () => {\n            exportDataOption(opt.value);\n            document.body.removeChild(popup);\n        };\n        popup.appendChild(btn);\n    });\n\n    document.body.appendChild(popup);\n    document.addEventListener('click', (e) => {\n        if (!popup.contains(e.target)) {\n            popup.remove();\n        }\n    }, { once: true });\n}\n\nfunction exportDataOption(option) {\n    const storedData = getStoredData();\n    const currentDate = getCurrentDate();\n\n    if (option === 'today') {\n        const entry = storedData.find(item => item.date === currentDate);\n        if (!entry) return;\n        const content = entry.interactions.map(i => copyInteraction(i.id)).join(\"\\n\\n--------------------------------------------------------\\n\\n\");\n        downloadFile(content, `interactions_${currentDate}.txt`);\n    } else if (option === 'allText') {\n        const allContent = storedData.map(entry => {\n            const dateHeader = `Date: ${entry.date}`;\n            const body = entry.interactions.map(i => copyInteraction(i.id)).join(\"\\n\\n--------------------------------------------------------\\n\\n\");\n            return `${dateHeader}\\n\\n${body}`;\n        }).join(\"\\n\\n============================================================\\n\\n\");\n        downloadFile(allContent, `interactions_all.txt`);\n    } else if (option === 'allJSON') {\n        const jsonData = JSON.stringify({ data: storedData }, null, 2);\n        downloadFile(jsonData, `interactions_all.json`, 'application/json');\n    }\n}\n\nfunction downloadFile(content, filename, type = 'text/plain') {\n    const blob = new Blob([content], { type });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = filename;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n}\n\n\n\nimport { getSuggestions, saveSuggestions } from './storage.js';\n\nconst suggestionModal = document.getElementById('suggestion-modal');\nconst suggestionTextarea = document.getElementById('suggestion-textarea');\nconst saveButton = document.getElementById('save-suggestions');\nconst closeButton = document.getElementById('close-modal');\nconst modalTitle = document.getElementById('modal-title');\nlet currentField = null;\n\nconst fieldLabels = {\n    \"reason-for-calling\": \"Reason for Calling\",\n    \"findings\": \"Findings\",\n    \"resolution\": \"Resolution\"\n};\n\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n    document.querySelectorAll('.suggestion-icon').forEach(btn => {\n        btn.addEventListener('click', () => {\n            currentField = btn.getAttribute('data-field');\n            const suggestions = getSuggestions();\n            suggestionTextarea.value = (suggestions[currentField] || []).join('\\n');\n            modalTitle.textContent = `Edit Suggestions: ${fieldLabels[currentField]}`;\n            suggestionModal.classList.remove('hidden');\n        });\n    });\n\n    saveButton.addEventListener('click', () => {\n        if (!currentField) return;\n        const lines = suggestionTextarea.value.split('\\n').map(s => s.trim()).filter(Boolean);\n        const suggestions = getSuggestions();\n        suggestions[currentField] = lines;\n        saveSuggestions(suggestions);\n        suggestionModal.classList.add('hidden');\n    });\n\n    closeButton.addEventListener('click', () => {\n        suggestionModal.classList.add('hidden');\n    });\n\n    // Suggestion dropdowns\n    const inputFields = document.querySelectorAll('.suggest-input');\n    inputFields.forEach(input => {\n        const field = input.getAttribute('data-field');\n        const list = document.querySelector(`.suggestions-list[data-for=\"${field}\"]`);\n\n        input.addEventListener('input', () => {\n            const suggestions = getSuggestions()[field] || [];\n            const value = input.value.toLowerCase();\n            list.innerHTML = '';\n            if (!value) return list.classList.add('hidden');\n            const matches = suggestions.filter(s => s.toLowerCase().includes(value));\n            if (matches.length === 0) return list.classList.add('hidden');\n            matches.forEach(match => {\n                const item = document.createElement('li');\n                item.textContent = match;\n                item.className = 'px-2 py-1 cursor-pointer hover:bg-blue-100';\n                item.addEventListener('click', () => {\n                    input.value = match;\n                    list.classList.add('hidden');\n                });\n                list.appendChild(item);\n            });\n            list.classList.remove('hidden');\n        });\n\n        input.addEventListener('blur', () => setTimeout(() => list.classList.add('hidden'), 200));\n    });\n});\n\n", "import { displayInteractions } from './ui.js';\n\nlet activeSidebarButton = null;\n\nexport function renderSidebar(data, highlightDate = null) {\n    const sidebarContent = document.getElementById(\"sidebar-content\");\n    sidebarContent.innerHTML = \"\";\n\n    data.forEach(item => {\n        const button = document.createElement(\"button\");\n        button.className = \"w-full flex justify-between items-center px-4 py-2 rounded transition-colors duration-150 hover:bg-yellow-100 cursor-pointer\";\n\n\n\n        const dateSpan = document.createElement(\"span\");\n        dateSpan.textContent = item.date;\n\n        const countBadge = document.createElement(\"span\");\n        countBadge.textContent = item.interactions.length;\n        countBadge.className = \"bg-red-500 text-white text-xs font-semibold ml-2 px-2 py-0.5 rounded-full\";\n\n        button.appendChild(dateSpan);\n        button.appendChild(countBadge);\n        button.dataset.date = item.date;\n\n\n        button.onclick = function () {\n            if (activeSidebarButton && activeSidebarButton !== this) {\n                activeSidebarButton.classList.remove(\"bg-red-400\", \"text-white\", \"font-semibold\");\n            }\n\n            if (activeSidebarButton !== this) {\n                this.classList.remove(\"bg-gray-200\");\n                this.classList.add(\"bg-red-400\", \"text-white\", \"font-semibold\");\n                activeSidebarButton = this;\n                displayInteractions(item.date);\n            }\n        };\n\n        if (highlightDate && item.date === highlightDate) {\n            setTimeout(() => button.click(), 0);\n        }\n\n        sidebarContent.appendChild(button);\n    });\n}\n\nexport function checkScreenWidth() {\n    const sidebar = document.getElementById(\"sidebar\");\n    if (window.innerWidth < 800) {\n        sidebar.style.display = \"none\";\n    } else {\n        sidebar.style.display = \"flex\";\n    }\n}\n\nexport function toggleSidebar() {\n    const sidebar = document.getElementById(\"sidebar\");\n    if (window.innerWidth < 800) {\n        sidebar.style.display = sidebar.style.display === \"none\" ? \"flex\" : \"none\";\n    } else {\n        sidebar.classList.toggle(\"w-0\");\n        sidebar.classList.toggle(\"overflow-hidden\");\n        sidebar.classList.toggle(\"w-64\");\n    }\n}\n", "// state.js\nexport let editingId = null;\n\nexport function setEditingId(id) {\n    editingId = id;\n}\n\nexport function getEditingId() {\n    return editingId;\n}\n\nexport function clearEditingId() {\n    editingId = null;\n}\n", "import { getStoredData, setStoredData, getCurrentDate } from './storage.js';\nimport { displayInteractions } from './ui.js';\nimport { renderSidebar } from './sidebar.js';\nimport { clearEditingId, getEditingId, setEditingId } from './state.js';\nimport { showToast } from './toast.js';\n\nexport function initForm() {\n    const form = document.getElementById('interaction-form');\n    const cancelBtn = document.getElementById('cancel-update');\n\n    form.addEventListener('submit', handleFormSubmit);\n\n    cancelBtn.addEventListener('click', () => {\n        form.reset();\n        clearEditingId();\n        document.getElementById('submit-button').textContent = 'Generate';\n        cancelBtn.classList.add('hidden');\n    });\n}\n\nfunction handleFormSubmit(event) {\n    event.preventDefault();\n    const form = document.getElementById('interaction-form');\n    const stored = getStoredData();\n    const date = getCurrentDate();\n    const entryIndex = stored.findIndex(item => item.date === date);\n    const editing = getEditingId();\n    const data = new FormData(form);\n\n    const baseInteraction = {\n        cn: data.get('calling-number'),\n        in: data.get('incident-number'),\n        name: data.get('name'),\n        reason: data.get('reason-for-calling'),\n        findings: data.get('findings'),\n        resolution: data.get('resolution'),\n    };\n\n    // return if all fields are empty\n    const isEmpty = Object.values(baseInteraction).every(val => !val.trim());\n    if (isEmpty) {\n        showToast(\"Please fill in at least one field before submitting.\");\n        return;\n    }\n\n    let newInteraction;\n\n    if (entryIndex === -1) {\n        newInteraction = {\n            id: `${Date.now()}`,\n            datetime: new Date().toISOString(),\n            completed: false,\n            ...baseInteraction\n        };\n        stored.push({ date, interactions: [newInteraction] });\n    } else {\n        if (editing) {\n            const interactionIndex = stored[entryIndex].interactions.findIndex(i => i.id === editing);\n            if (interactionIndex !== -1) {\n                const existing = stored[entryIndex].interactions[interactionIndex];\n                newInteraction = {\n                    ...existing,\n                    ...baseInteraction\n                };\n                stored[entryIndex].interactions[interactionIndex] = newInteraction;\n            }\n        } else {\n            newInteraction = {\n                id: `${Date.now()}`,\n                datetime: new Date().toISOString(),\n                completed: false,\n                ...baseInteraction\n            };\n            stored[entryIndex].interactions.unshift(newInteraction);\n        }\n    }\n\n    localStorage.setItem('interactions', JSON.stringify(stored));\n\n    const text = [\n        newInteraction.cn && `Calling Number: ${newInteraction.cn}`,\n        newInteraction.in && `Incident Number: ${newInteraction.in}`,\n        newInteraction.name && `Name: ${newInteraction.name}`,\n        newInteraction.reason && `Reason for Calling: ${newInteraction.reason}`,\n        newInteraction.findings && `Findings: ${newInteraction.findings}`,\n        newInteraction.resolution && `Resolution: ${newInteraction.resolution}`\n    ].filter(Boolean).join('\\n');\n\n    navigator.clipboard.writeText(text)\n        .then(() => showToast(\"Interaction copied to clipboard\"))\n        .catch(() => showToast(\"Failed to copy interaction\"));\n\n    clearEditingId();\n    form.reset();\n    document.getElementById('submit-button').textContent = 'Generate';\n    document.getElementById('cancel-update').classList.add('hidden');\n    displayInteractions(date);\n    renderSidebar(getStoredData());\n\n    setTimeout(() => {\n        const card = document.querySelector(`[data-id=\"${newInteraction.id}\"]`);\n        if (card) {\n            card.scrollIntoView({ behavior: 'smooth', block: 'center' });\n            card.classList.add('ring', 'ring-yellow-400', 'ring-offset-2');\n            setTimeout(() => {\n                card.classList.remove('ring', 'ring-yellow-400', 'ring-offset-2');\n            }, 1500);\n        }\n    }, 100);\n}\n\nexport function prefillForm(interaction) {\n    const form = document.getElementById('interaction-form');\n    setEditingId(interaction.id);\n    document.getElementById('submit-button').textContent = 'Update';\n    document.getElementById('cancel-update').classList.remove('hidden');\n\n    form['calling-number'].value = interaction.cn || '';\n    form['incident-number'].value = interaction.in || '';\n    form['name'].value = interaction.name || '';\n    form['reason-for-calling'].value = interaction.reason || '';\n    form['findings'].value = interaction.findings || '';\n    form['resolution'].value = interaction.resolution || '';\n}", "import { initForm } from './form.js';\nimport { renderSidebar, checkScreenWidth } from './sidebar.js';\nimport { displayInteractions } from './ui.js';\nimport { getStoredData, getCurrentDate, importDataFromFile } from './storage.js';\nimport templates from '../public/templates.html?inline'; // \u2705 INLINE IMPORT\n\nwindow.addEventListener('DOMContentLoaded', () => {\n    checkScreenWidth();\n    window.addEventListener('resize', checkScreenWidth);\n\n    importDataFromFile('import-json');\n\n    // \u2705 Inject templates directly\n    const container = document.createElement('div');\n    container.innerHTML = templates;\n    document.body.appendChild(container);\n\n    // \u2705 Init app\n    const storedData = getStoredData();\n    const today = getCurrentDate();\n\n    renderSidebar(storedData, today);\n    displayInteractions(today);\n    initForm();\n\n    const exportBtn = document.getElementById('export-all');\n    if (exportBtn) {\n        exportBtn.addEventListener('click', (e) => {\n            e.stopPropagation();\n            import('./ui.js').then(module => module.createExportPopup());\n        });\n    }\n});\n", "<template id=\"interaction-card\">\n  <div\n    class=\"card bg-white rounded-xl shadow-md p-4 mb-4 transition-colors hover:shadow-lg hover:bg-yellow-50\"\n    data-id=\"\"\n  >\n    <div class=\"flex justify-between items-start mb-2\">\n      <h2 class=\"text-xl font-bold reason\"></h2>\n      <button class=\"done-button text-gray-500 text-lg\">\n        <i class=\"fas fa-check-circle fa-2x\"></i>\n      </button>\n    </div>\n    <p class=\"text-sm text-gray-600 datetime\"></p>\n    <p class=\"text-sm text-gray-600 incident-number\"></p>\n    <p class=\"text-sm text-gray-600 calling-number\"></p>\n    <p class=\"text-sm text-gray-600 name\"></p>\n    <p class=\"text-sm text-gray-600 findings\"></p>\n    <p class=\"text-sm text-gray-600 resolution\"></p>\n    <div class=\"flex justify-end space-x-2 mt-4 button-container\">\n      <button\n        class=\"copy-incident bg-gray-300 hover:bg-gray-400 text-gray-800 px-2 py-0.5 rounded text-sm\"\n        title=\"Copy incident number\"\n      >\n        #\n      </button>\n      <button\n        class=\"copy-button bg-blue-500 hover:bg-blue-600 text-white px-3 py-1 rounded\"\n      >\n        Copy\n      </button>\n      <button\n        class=\"update-button bg-green-500 hover:bg-green-600 text-white px-3 py-1 rounded\"\n      >\n        Update\n      </button>\n      <button\n        class=\"delete-button bg-red-500 hover:bg-red-600 text-white px-3 py-1 rounded\"\n      >\n        Delete\n      </button>\n    </div>\n  </div>\n</template>\n"],
  "mappings": "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",
  "names": ["showToast", "message", "type", "toast", "init_toast", "__esmMin", "getStoredData", "setStoredData", "data", "getCurrentDate", "date", "importDataFromFile", "inputElementId", "input", "e", "file", "reader", "event", "imported", "newData", "showToast", "currentData", "merged", "mergeInteractionData", "err", "current", "incoming", "map", "entry", "existing", "ids", "i", "unique", "getSuggestions", "saveSuggestions", "suggestions", "init_storage", "__esmMin", "init_toast", "ui_exports", "__export", "createExportPopup", "displayInteractions", "targetDate", "getCurrentDate", "cardList", "entry", "getStoredData", "item", "template", "a", "b", "interaction", "clone", "card", "btn", "actionContainer", "toggleComplete", "showToast", "copyToClipboard", "prefillForm", "form", "deleteInteraction", "stored", "entryIndex", "original", "newId", "newInteraction", "__spreadProps", "__spreadValues", "newCard", "copyInteraction", "id", "i", "text", "storedData", "currentDate", "setStoredData", "popup", "opt", "exportDataOption", "e", "option", "content", "downloadFile", "allContent", "dateHeader", "body", "jsonData", "filename", "type", "blob", "url", "suggestionModal", "suggestionTextarea", "saveButton", "closeButton", "modalTitle", "currentField", "fieldLabels", "init_ui", "__esmMin", "init_storage", "init_form", "init_toast", "suggestions", "getSuggestions", "lines", "s", "saveSuggestions", "input", "field", "list", "value", "matches", "match", "renderSidebar", "data", "highlightDate", "sidebarContent", "item", "button", "dateSpan", "countBadge", "activeSidebarButton", "displayInteractions", "checkScreenWidth", "sidebar", "init_sidebar", "__esmMin", "init_ui", "setEditingId", "id", "editingId", "getEditingId", "clearEditingId", "init_state", "__esmMin", "initForm", "form", "cancelBtn", "handleFormSubmit", "clearEditingId", "event", "stored", "getStoredData", "date", "getCurrentDate", "entryIndex", "item", "editing", "getEditingId", "data", "baseInteraction", "val", "showToast", "newInteraction", "__spreadValues", "interactionIndex", "i", "existing", "text", "displayInteractions", "renderSidebar", "card", "prefillForm", "interaction", "setEditingId", "init_form", "__esmMin", "init_storage", "init_ui", "init_sidebar", "init_state", "init_toast", "init_form", "init_sidebar", "init_ui", "init_storage", "templates_default", "checkScreenWidth", "importDataFromFile", "container", "templates_default", "storedData", "getStoredData", "today", "getCurrentDate", "renderSidebar", "displayInteractions", "initForm", "exportBtn", "e", "module"]
}
